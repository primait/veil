[config]
skip_core_tasks = true

[tasks.build]
description = "Runs the rust compiler."
category = "Build"
install_crate = false
command = "cargo"
args = [
    "build",
    "@@remove-empty(CARGO_MAKE_CARGO_VERBOSE_FLAGS)",
    "@@split(CARGO_MAKE_CARGO_BUILD_TEST_FLAGS, )",
]

[tasks.test]
dependencies = ["test-base", "test-environment-aware"]

[tasks.test-base]
command = "cargo"
args = ["test", "--all"]
dependencies = ["build"]

[tasks.test-environment-aware]
command = "cargo"
args = ["test", "--all", "--features=environment-aware"]
dependencies = ["build"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--all-features", "--", "-D", "warnings"]

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.format-ci]
description = "Runs the cargo rustfmt plugin during CI."
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.clippy-ci]
command = "cargo"
args = ["clippy", "--", "-D", "warnings"]

[tasks.build-ci]
description = "Build inside CI."
command = "cargo"
args = ["build", "-j", "2", "--all-features"]

[tasks.cache-cleanup]
description = "Clean CI cache"
dependencies = ["cargo-prune", "sweep", "delete-artifacts"]

[tasks.sweep]
description = "Clean cargo cache with sweep"
command = "cargo sweep -t 10"
ignore_errors = true

[tasks.cargo-prune]
description = "Run cargo prune"
command = "cargo"
args = ["prune"]

[tasks.delete-artifacts]
description = "Remove non cachable artifacts"
script = [
    '''
    #!/bin/bash
    set -e
    set -x
    find ./target/debug -type f -maxdepth 1 -delete || true
    rm -rfv ./target/{debug,release}/deps/{*veil*}
    rm -rfv ./target/{debug,release}/.fingerprint/*veil*
    '''
]

[tasks.sweep-start]
description = "Start cargo sweep"
command = "cargo"
args = ["sweep", "-s"]

[tasks.sweep-end]
description = "Run cargo sweep cleanup"
command = "cargo"
args = ["sweep", "-f"]

[tasks.print-stats]
description = "Print cache size"
command = "du"
args = ["-sh", "target", ".cargo"]

[tasks.docsrs]
description = "Build docs as they are rendered on docs.rs"
env = { RUSTDOCFLAGS = "--cfg docsrs" }
command = "cargo"
toolchain = "nightly"
args = ["doc", "--all-features"]
