[package]
name = "veil"
version = "0.1.4"
edition = "2021"
description = "Rust derive macro for redacting sensitive data in `std::fmt::Debug`"
license = "MIT OR Apache-2.0"
repository = "https://github.com/primait/veil"
categories = ["rust-patterns", "development-tools::debugging", "value-formatting"]
keywords = ["redaction", "masking", "redact", "privacy", "sensitive"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[workspace]
members = ["veil-macros", "veil-tests",
# Because those tests deal with global state we need to run them in a separate process.
# The easiest/only way to do this with the standard rust test harness is to put them in a
# separate crate
"veil-tests/disable-redaction-test"
]

[features]
toggle = []

[[example]]
name = "disable_redaction"
required-features = ["toggle"]

[dependencies]
veil-macros = { path = "veil-macros", version = "=0.1.4" }
once_cell = "1"

[dev-dependencies]
toml = "0.5"
serde = { version = "1", features = ["derive"] }
